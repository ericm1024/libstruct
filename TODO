tests:
	The current testing is pretty good, but in general I think everything
	could use a few more tests that try as hard as they can to break the
	testee.

bugs:
	- rbtree postorder itteration is failing.

issues:
	- none that I know of right now
        - binary heap does not support decrease key (should)

in progress:
        radix tree (integers)

future structures:
	skip list
	counting filter
	trie (strings)
	union-join
	stack
        queue
	deque
        btree
        lazy binomial heap
        fibonacci heap
        binary decision diagram
        d-ary heap
        leftist heap
        r-tree
        adjacency list
        bitmap
        freelist
        splay tree
        beap
        skew keap

housekeeping/etc:
        - tests should compile into bin/ and not test/

refactoring:
	- do a once over of all old code, particularly avl_tree. There
	  is some messy stuff in there. (also flist and list)
	- remove typdefs for structs, old style was better (i.e. revert to
	  always using struct foo instead of typedef'ing "struct foo" to
	  "foo_t" everywhere)
        - change tests to use good random numbers via pcg64_random() instead
          of libc's rand() because it's a bad egg.
        - change all declaration macros (i.e. LIST_HEAD) to be initializers
          so they can be used with dynamically allocated memory
        - make script that runs tests better

wish list:
	- benchmark and optimize all structures